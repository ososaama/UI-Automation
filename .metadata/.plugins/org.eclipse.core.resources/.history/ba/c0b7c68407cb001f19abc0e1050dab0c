package Pages;

import java.time.Duration;
import java.util.List;
import java.util.NoSuchElementException;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import Utilities.BasePage;

public class VideoGames extends BasePage {
	
	 @FindBy(xpath = "//label[@for='apb-browse-refinements-checkbox_0']//i[@class='a-icon a-icon-checkbox']")
	 private WebElement freeShippingCheckbox;
	 
	 @FindBy(xpath = "//span[@class='a-size-base a-color-base'][normalize-space()='New']")
	 private WebElement conditionNewFilter;
	
	 @FindBy(id = "s-result-sort-select")
	 private WebElement sortDropdown;
	 
	 @FindBy(xpath = "//option[@value='price-desc-rank']")
	 private WebElement highToLowOption;
	 
	 @FindBy(xpath = "//span[@class='a-price-whole']")
	    private List<WebElement> productPrices;

	 @FindBy(xpath = "//input[@aria-labelledby='add-to-cart-button-announce']")
	    private List<WebElement> addToCartButtons;

	 @FindBy(xpath = "//a[contains(@class, 's-pagination-next')]")
	    private WebElement nextPageButton;

	 @FindBy(xpath = "//div[@data-component-type='s-search-result']")
	    private List<WebElement> productContainers;
	 
   
    public VideoGames(WebDriver driver) {
        super(driver);
        PageFactory.initElements(driver, this);
    }
    
    public void applyFilters() {
    	WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(10));
    	
        WebElement freeShipping = wait.until(ExpectedConditions.visibilityOf(freeShippingCheckbox));
    	scrollToElement(freeShipping);
        clickElement(freeShipping);
        
        WebElement newCondition = wait.until(ExpectedConditions.visibilityOf(conditionNewFilter));
        scrollToElement(newCondition);
        clickElement(newCondition);
    }
    
    public void sortByHighToLow() {
    	clickElement(sortDropdown);
    	clickElement(highToLowOption);
    }
    
    public void addProductsUnder15k() {
        List<WebElement> products = driver.findElements(By.xpath("//div[@data-component-type='s-search-result']"));
        
        for (WebElement product : products) {
            try {
                // Locate product price
                WebElement priceElement = product.findElement(By.xpath(".//span[@class='a-price-whole']"));
                String priceText = priceElement.getText().replace(",", "").trim();
                int price = Integer.parseInt(priceText);
                
                // Check if price is under 15k
                if (price < 15000) {
                    // Check for "Add to Cart" button
                    List<WebElement> addToCartButtons = product.findElements(By.xpath(".//input[@aria-label='Add to Cart']"));
                    
                    if (!addToCartButtons.isEmpty()) {
                        // Click "Add to Cart" button
                        WebElement addToCartButton = addToCartButtons.get(0);
                        addToCartButton.click();
                        
                        // Wait for the cart to update (if needed)
                        Thread.sleep(2000); // Adjust timing if necessary
                    } else {
                        System.out.println("No 'Add to Cart' button for product priced at: " + price);
                    }
                }
            } catch (NoSuchElementException e) {
                System.out.println("Error locating element for product: " + e.getMessage());
            } catch (Exception e) {
                System.out.println("Unexpected error: " + e.getMessage());
            }
        }
    }

}


